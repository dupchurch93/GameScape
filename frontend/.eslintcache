[{"/home/daniel/VS_code/Projects/GameScape/frontend/src/index.js":"1","/home/daniel/VS_code/Projects/GameScape/frontend/src/App.js":"2","/home/daniel/VS_code/Projects/GameScape/frontend/src/store/csrf.js":"3","/home/daniel/VS_code/Projects/GameScape/frontend/src/store/session.js":"4","/home/daniel/VS_code/Projects/GameScape/frontend/src/store/index.js":"5","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/LoginFormPage/index.js":"6","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/Navigation/index.js":"7","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/SignUpFormPage/index.js":"8","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/LoginFormPage/LoginFormPage.js":"9","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/Navigation/Navigation.js":"10","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/SignUpFormPage/SignUpFormPage.js":"11","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/Navigation/ProfileButton.js":"12","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/Navigation/userDetailComponent.js":"13","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/WelcomeComponent/index.js":"14","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/WelcomeComponent/WelcomeComponent.js":"15","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/DashboardComponent/index.js":"16","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/DashboardComponent/DashboardComponent.js":"17","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/DashboardComponent/DeckListComponent.js":"18","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/DashboardComponent/DeckListHeaders.js":"19","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/index.js":"20","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/AdventureComponent.js":"21","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/DeckStartButtonsComponent.js":"22","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/DeckStartComponent.js":"23","/home/daniel/VS_code/Projects/GameScape/frontend/src/store/deck.js":"24","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/QuestionComponent.js":"25","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/QuestionButtonComponent.js":"26","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/AnswerButtonComponent.js":"27","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/AnswerComponent.js":"28","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AllDecksComponent/index.js":"29","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AllDecksComponent/AllDecksComponent.js":"30","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/NewAdventuresComponent/index.js":"31","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/NewAdventuresComponent/NewAdventuresComponent.js":"32","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AllDecksComponent/IndividualDeckComponent.js":"33","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventurePreviewComponent/index.js":"34","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventurePreviewComponent/AdventurePreviewComponent.js":"35","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/FinishedComponent.js":"36","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/FinishedComponentButtons.js":"37"},{"size":813,"mtime":1611348005418,"results":"38","hashOfConfig":"39"},{"size":2732,"mtime":1612016193298,"results":"40","hashOfConfig":"39"},{"size":1544,"mtime":1611356768099,"results":"41","hashOfConfig":"39"},{"size":1675,"mtime":1611792017819,"results":"42","hashOfConfig":"39"},{"size":729,"mtime":1611934275083,"results":"43","hashOfConfig":"39"},{"size":77,"mtime":1611413335475,"results":"44","hashOfConfig":"39"},{"size":67,"mtime":1611413322312,"results":"45","hashOfConfig":"39"},{"size":80,"mtime":1611414240629,"results":"46","hashOfConfig":"39"},{"size":2036,"mtime":1611876566871,"results":"47","hashOfConfig":"39"},{"size":2081,"mtime":1611852035596,"results":"48","hashOfConfig":"39"},{"size":2606,"mtime":1611771974565,"results":"49","hashOfConfig":"39"},{"size":1164,"mtime":1611617812674,"results":"50","hashOfConfig":"39"},{"size":790,"mtime":1611771974561,"results":"51","hashOfConfig":"39"},{"size":85,"mtime":1611771974567,"results":"52","hashOfConfig":"39"},{"size":388,"mtime":1611771974566,"results":"53","hashOfConfig":"39"},{"size":89,"mtime":1611771974554,"results":"54","hashOfConfig":"39"},{"size":1872,"mtime":1612016100596,"results":"55","hashOfConfig":"39"},{"size":792,"mtime":1612014526978,"results":"56","hashOfConfig":"39"},{"size":405,"mtime":1611771974553,"results":"57","hashOfConfig":"39"},{"size":91,"mtime":1611852035580,"results":"58","hashOfConfig":"39"},{"size":3808,"mtime":1611963543616,"results":"59","hashOfConfig":"39"},{"size":230,"mtime":1611957901843,"results":"60","hashOfConfig":"39"},{"size":227,"mtime":1611860383128,"results":"61","hashOfConfig":"39"},{"size":1794,"mtime":1612013708535,"results":"62","hashOfConfig":"39"},{"size":207,"mtime":1611876700759,"results":"63","hashOfConfig":"39"},{"size":223,"mtime":1611866088810,"results":"64","hashOfConfig":"39"},{"size":479,"mtime":1611958288212,"results":"65","hashOfConfig":"39"},{"size":155,"mtime":1611872055980,"results":"66","hashOfConfig":"39"},{"size":88,"mtime":1611878955917,"results":"67","hashOfConfig":"39"},{"size":987,"mtime":1611946761757,"results":"68","hashOfConfig":"39"},{"size":103,"mtime":1611937868029,"results":"69","hashOfConfig":"39"},{"size":1095,"mtime":1611939906280,"results":"70","hashOfConfig":"39"},{"size":393,"mtime":1611944001494,"results":"71","hashOfConfig":"39"},{"size":112,"mtime":1611943128312,"results":"72","hashOfConfig":"39"},{"size":1402,"mtime":1611959737838,"results":"73","hashOfConfig":"39"},{"size":1122,"mtime":1612015133501,"results":"74","hashOfConfig":"39"},{"size":545,"mtime":1611959374003,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1slgaed",{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"78"},"/home/daniel/VS_code/Projects/GameScape/frontend/src/index.js",[],["160","161"],"/home/daniel/VS_code/Projects/GameScape/frontend/src/App.js",["162"],"/home/daniel/VS_code/Projects/GameScape/frontend/src/store/csrf.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/store/session.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/store/index.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/LoginFormPage/index.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/Navigation/index.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/SignUpFormPage/index.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/LoginFormPage/LoginFormPage.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/Navigation/Navigation.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/SignUpFormPage/SignUpFormPage.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/Navigation/ProfileButton.js",[],["163","164"],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/Navigation/userDetailComponent.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/WelcomeComponent/index.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/WelcomeComponent/WelcomeComponent.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/DashboardComponent/index.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/DashboardComponent/DashboardComponent.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/DashboardComponent/DeckListComponent.js",["165"],"import { NavLink } from \"react-router-dom\";\n\nconst DeckListComponent = ({ deck }) => {\n  const questions = deck.questions;\n  const totalQuestionsInDeck = questions.length\n  let bestScore;\n  let averageScore\n  if(deck.bestScore===0){\n    bestScore = \"Try Out the Adventure...\";\n    averageScore = \"\";\n  } else{\n    bestScore = (deck.bestScore);\n    averageScore = (deck.averageScore);\n  }\n\n\n  return (\n    <div className='deckListComponent'>\n      <NavLink\n        className=\"deckList__deck-name\"\n        to={`/adventures/${deck.id}`}\n        key={deck.id}\n      >\n        {deck.name}\n      </NavLink>\n      <div className=\"deckList__deck-best-score\">{bestScore}</div>\n      <div className=\"deckList__deck-best-score\">{averageScore}</div>\n    </div>\n  );\n};\n\nexport default DeckListComponent;\n","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/DashboardComponent/DeckListHeaders.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/index.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/AdventureComponent.js",["166"],"import { useParams } from \"react-router-dom\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport DeckStartComponent from \"./DeckStartComponent\";\nimport QuestionComponent from \"./QuestionComponent\";\nimport \"./AdventureComponent.css\";\nimport DeckStartButtonsComponent from \"./DeckStartButtonsComponent\";\nimport QuestionButtonComponent from \"./QuestionButtonComponent\";\nimport AnswerComponent from \"./AnswerComponent\";\nimport AnswerButtonComponent from \"./AnswerButtonComponent\";\nimport FinishedComponent from \"./FinishedComponent\";\nimport FinishedComponentButtons from \"./FinishedComponentButtons\";\n\n\nconst AdventureComponent = () => {\n  const { deckId } = useParams();\n  const deck = useSelector((state) => state.decks.deckList[deckId]);\n  const [studyingBegan, setStudyingBegan] = useState(false);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [unansweredQuestions, setUnansweredQuestions] = useState([\n    ...deck.questions,\n  ]);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [answeredState, setAnsweredState] = useState(true);\n  const [finishedState, setFinishedState] = useState(false);\n\n  const askRandomQuestion = useCallback(() => {\n    if (!studyingBegan) {\n      setStudyingBegan(true);\n    }\n    if (unansweredQuestions.length === 0) {\n      setFinishedState(true);\n\n      return;\n    }\n    //grab the question at a random index\n    const questionIndex = Math.floor(\n      Math.random() * unansweredQuestions.length\n    );\n    const question = unansweredQuestions[questionIndex];\n    //get a new array without the question that has been taken out in order to set to the new unansweredQuestionArray\n    const newUnansweredQuestionsArray = [\n      ...unansweredQuestions.slice(0, questionIndex),\n      ...unansweredQuestions.slice(questionIndex + 1, questionIndex.length),\n    ];\n    setAnsweredState(false);\n    setUnansweredQuestions(newUnansweredQuestionsArray);\n    setCurrentQuestion(question);\n  }, [unansweredQuestions, studyingBegan]);\n\n  let questionArea;\n  let buttonsArea;\n\n  if (!studyingBegan) {\n    questionArea = <DeckStartComponent></DeckStartComponent>;\n    buttonsArea = (\n      <DeckStartButtonsComponent\n        askRandomQuestion={askRandomQuestion}\n      ></DeckStartButtonsComponent>\n    );\n  } else if (finishedState) {\n    questionArea = <FinishedComponent deck={deck} currentScore={currentScore}></FinishedComponent>;\n    buttonsArea = (\n      <FinishedComponentButtons\n      setCurrentScore={setCurrentScore}\n      setFinishedState={setFinishedState}\n      setStudyingBegan={setStudyingBegan}\n      setAnsweredState={setAnsweredState}\n      questions={deck.questions}\n      setUnansweredquestions={setUnansweredQuestions}\n      ></FinishedComponentButtons>\n    );\n  } else {\n    if (!answeredState) {\n      questionArea = (\n        <QuestionComponent question={currentQuestion}></QuestionComponent>\n      );\n      buttonsArea = (\n        <QuestionButtonComponent\n          setAnsweredState={setAnsweredState}\n        ></QuestionButtonComponent>\n      );\n    } else {\n      questionArea = (\n        <AnswerComponent question={currentQuestion}></AnswerComponent>\n      );\n      buttonsArea = (\n        <AnswerButtonComponent\n          setCurrentScore={setCurrentScore}\n          askRandomQuestion={askRandomQuestion}\n          currentScore={currentScore}\n        ></AnswerButtonComponent>\n      );\n    }\n  }\n\n  return (\n    <div className=\"adventure-component__deck-container\">\n      <div className=\"main-dashboard-component deck-title\">{deck.name}</div>.\n      <div className=\"main-dashboard-component question-area\">\n        {questionArea}\n        <div className=\"question-area__buttons\">{buttonsArea}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdventureComponent;\n","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/DeckStartButtonsComponent.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/DeckStartComponent.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/store/deck.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/QuestionComponent.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/QuestionButtonComponent.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/AnswerButtonComponent.js",["167"],"const AnswerButtonComponent = ({ currentScore, askRandomQuestion, setCurrentScore }) => {\n  return (\n    <div>\n      <button className=\"question-button\" onClick={() => {\n        askRandomQuestion();\n        setCurrentScore(currentScore + 1)\n      }}>\n        Correct\n      </button>\n      <button className=\"question-button\" onClick={askRandomQuestion}>\n        Incorrect\n      </button>\n    </div>\n  );\n};\n\nconst setScore = (prev) => {\n\n}\n\nexport default AnswerButtonComponent;\n","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/AnswerComponent.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AllDecksComponent/index.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AllDecksComponent/AllDecksComponent.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/NewAdventuresComponent/index.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/NewAdventuresComponent/NewAdventuresComponent.js",["168","169"],"import { useState } from \"react\";\nimport \"./NewAdventureComponent.css\"\n\nconst NewAdventuresComponent = () => {\n  const [deckTitle, setDeckTitle] = useState(\"\");\n  const [questionObjectsArray, setQuestionsObjectArray] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div className=\"new-adventure-container\">\n      <div className=\"main-dashboard-component main-dashboard-component-title\">\n        This is the new adventure component.\n      </div>\n      <div className=\"main-dashboard-component deck-creation-area\">\n        <form className=\"deck-creation-form\" onSubmit={handleSubmit}>\n          <label htmlFor=\"deckTitle\">Deck Title</label>\n          <input\n            type=\"text\"\n            id=\"deckTitle\"\n            onChange={(e) => setDeckTitle(e.target.value)}\n            value={deckTitle}\n          ></input>\n          <div className=\"question-inputs\">\n              <label htmlFor=\"questionObjectArray\">Question</label>\n              \n          </div>\n\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default NewAdventuresComponent;\n","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AllDecksComponent/IndividualDeckComponent.js",["170"],"import { NavLink } from \"react-router-dom\";\n\nconst IndividualDeckComponent = ({ deck }) => {\n  const questions = deck.questions;\n\n  return (\n    <div className='IndividualDeckComponent'>\n      <NavLink\n        className=\"deckList__deck-name\"\n        to={`/adventures/preview/${deck.id}`}\n      >\n        {deck.name}\n      </NavLink>\n    </div>\n  );\n};\n\nexport default IndividualDeckComponent;\n","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventurePreviewComponent/index.js",[],"/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventurePreviewComponent/AdventurePreviewComponent.js",["171","172"],"import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport fetch from \"../../store/csrf\";\n\nconst AdventurePreviewComponent = () => {\n  const { deckId } = useParams();\n\n  const [deck, setDeck] = useState(null);\n  const [questions, setQuestions] = useState(null);\n\n  const getDeck = async () => {\n    const res = await fetch(`/api/decks/${deckId}`);\n    if (res.ok) {\n      console.log(\"deck here\", res.data.deck);\n      setDeck(res.data.deck);\n      // setQuestions(res.data.deck.Questions);\n    }\n  };\n\n  useEffect(() => {\n    getDeck();\n  }, []);\n\n  useEffect(() => {\n    if (deck) {\n      console.log('here')\n      setQuestions(deck.Question);\n      console.log(questions)\n    }\n  }, [deck]);\n\n  return (\n    <div className=\"preview-container\">\n      <div className=\"main-dashboard-component\">{deck && deck.name}</div>\n      <div className=\"main-dashboard-component preview-questions\">\n        {questions &&\n          questions.map((question) => {\n            return (\n              <div>test</div>\n              // <>\n              //   <div className='preview-questions-question'>\n              //     {question.question}?\n              //   </div>\n              //   <div className='preview-questions-answer'>{question.answer}</div>\n              // </>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default AdventurePreviewComponent;\n","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/FinishedComponent.js",["173"],"import { useEffect } from \"react\";\nimport {useDispatch} from 'react-redux';\nimport { updateDeckScoreThunk } from \"../../store/deck\";\n\nconst FinishedComponent = ({ deck, currentScore }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const averageScore = deck.averageScore || 0;\n    const bestScore = deck.bestScore || 0;\n    const totalQuestions = deck.questions.length;\n    const timesStudied = deck.timesStudied || 0;\n    console.log('best score', bestScore);\n    console.log('previous average score', averageScore);\n    console.log('times played', timesStudied);\n    const newAverageScore = (averageScore + currentScore)/((timesStudied*averageScore)+1);\n    console.log('new average score', newAverageScore)\n    deck.averageScore = newAverageScore;\n    deck.timesStudied = timesStudied + 1;\n    if (bestScore < currentScore) {\n      deck.bestScore = currentScore;\n    };\n    dispatch(updateDeckScoreThunk(deck));\n  });\n\n  return (\n    <div>\n      You completed your adventure. You managed to defeat #{currentScore}{\" \"}\n      enemies out of a total\n    </div>\n  );\n};\n\nexport default FinishedComponent;\n","/home/daniel/VS_code/Projects/GameScape/frontend/src/components/AdventuresComponent/FinishedComponentButtons.js",["174"],"import deckReducer from \"../../store/deck\";\n\nconst FinishedComponentButtons = ({ questions, setUnansweredquestions, setFinishedState, setStudyingBegan, setCurrentScore, setAnsweredState }) => {\n  return (\n    <button\n      className=\"question-button\"\n      onClick={() => {\n        setAnsweredState(false)\n        setStudyingBegan(false)\n        setFinishedState(false)\n        setCurrentScore(0)\n        setUnansweredquestions([...questions])\n      }}\n    >\n      Adventure Again\n    </button>\n  );\n};\n\nexport default FinishedComponentButtons;\n",{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":35,"column":6,"nodeType":"181","endLine":35,"endColumn":16,"suggestions":"182"},{"ruleId":"175","replacedBy":"183"},{"ruleId":"177","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":5,"column":9,"nodeType":"187","messageId":"188","endLine":5,"endColumn":29},{"ruleId":"185","severity":1,"message":"189","line":2,"column":20,"nodeType":"187","messageId":"188","endLine":2,"endColumn":29},{"ruleId":"185","severity":1,"message":"190","line":17,"column":7,"nodeType":"187","messageId":"188","endLine":17,"endColumn":15},{"ruleId":"185","severity":1,"message":"191","line":6,"column":10,"nodeType":"187","messageId":"188","endLine":6,"endColumn":30},{"ruleId":"185","severity":1,"message":"192","line":6,"column":32,"nodeType":"187","messageId":"188","endLine":6,"endColumn":55},{"ruleId":"185","severity":1,"message":"193","line":4,"column":9,"nodeType":"187","messageId":"188","endLine":4,"endColumn":18},{"ruleId":"179","severity":1,"message":"194","line":22,"column":6,"nodeType":"181","endLine":22,"endColumn":8,"suggestions":"195"},{"ruleId":"179","severity":1,"message":"196","line":30,"column":6,"nodeType":"181","endLine":30,"endColumn":12,"suggestions":"197"},{"ruleId":"185","severity":1,"message":"198","line":11,"column":11,"nodeType":"187","messageId":"188","endLine":11,"endColumn":25},{"ruleId":"185","severity":1,"message":"199","line":1,"column":8,"nodeType":"187","messageId":"188","endLine":1,"endColumn":19},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["202"],["200"],["201"],"no-unused-vars","'totalQuestionsInDeck' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setScore' is assigned a value but never used.","'questionObjectsArray' is assigned a value but never used.","'setQuestionsObjectArray' is assigned a value but never used.","'questions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getDeck'. Either include it or remove the dependency array.",["203"],"React Hook useEffect has a missing dependency: 'questions'. Either include it or remove the dependency array.",["204"],"'totalQuestions' is assigned a value but never used.","'deckReducer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [dispatch, isLoaded]",{"range":"211","text":"212"},"Update the dependencies array to be: [getDeck]",{"range":"213","text":"214"},"Update the dependencies array to be: [deck, questions]",{"range":"215","text":"216"},[1214,1224],"[dispatch, isLoaded]",[582,584],"[getDeck]",[725,731],"[deck, questions]"]